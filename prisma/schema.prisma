generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        String  @id @default(uuid())
  firstname String? @map("first_name")
  lastname  String? @map("last_name")
  email     String  @unique
  password  String

  picture String?

  isVerified Boolean @default(false) @map("is_verified")

  isTwoFactorEnabled Boolean @default(false) @map("is_two_factor_enabled")

  role UserRole @default(REGULAR)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  method   AuthMethod @default(CREDENTIALS)
  Accounts Account[]
  Session  Session[]

  @@map("users")
}

model Account {
  id String @id @default(uuid())

  type     String
  provider String

  refreshToken String? @map("refresh_token")
  accessToken  String? @map("access_token")
  expiresAt    Int     @map("expires_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User?  @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@map("accounts")
}

model Token {
  id        String    @id @default(uuid())
  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  @@map("tokens")
}

model Session {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  refreshToken String   @map("refresh_token")
  ip           String?
  userAgent    String?
  expiresAt    DateTime @map("expires_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sessions")
}

model Item {
  id   String @id @default(uuid())
  name String
}

enum UserRole {
  REGULAR
  ADMIN
}

enum AuthMethod {
  CREDENTIALS
  GOOGLE
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
}
